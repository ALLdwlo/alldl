# Redirect any HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name co.wukko.sh;
    return 301 https://$host$request_uri;
  
}

# Redirect any HTTP traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name co.wuk.sh;
    return 301 https://$host$request_uri;
  
}

# Server block definition for cobalt web.
server {
    # Listen for for requests to the domain on port 443.
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name co.wukko.sh;
	
    # Turn logging off for privacy.
    access_log off;
    error_log /dev/null;

    # If you wish to have logging, you can uncomment these.
    #access_log /var/log/nginx/co.wukko.sh.access.log;
    #error_log /var/log/nginx/co.wukko.sh.error.log;
	
    # Set your HTTPS certificate.
    ssl_certificate /etc/letsencrypt/live/co.wukko.sh/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/co.wukko.sh/privkey.pem;

    # Pass all requests to cobalt web, as defined above.
    # If you use a different port for cobalt web, change it here!
    location / {
        proxy_pass http://127.0.0.1:9000;
        proxy_http_version 1.1;
    }
}

# Server block definition for cobalt API.
server {
    # Listen for for requests to the domain on port 443.
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name co.wuk.sh;
	
    # Turn logging off for privacy.
    access_log off;
    error_log /dev/null;

    # If you wish to have logging, you can uncomment these.
    #access_log /var/log/nginx/co.wukko.sh.access.log;
    #error_log /var/log/nginx/co.wukko.sh.error.log;
	
    # Set your HTTPS certificate.
    ssl_certificate /etc/letsencrypt/live/co.wuk.sh/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/co.wuk.sh/privkey.pem;

    # Pass all requests to cobalt API, as defined above.
    # If you use a different port for cobalt API, change it here!
    location / {
        proxy_pass http://127.0.0.1:9001;
        proxy_http_version 1.1;
    }
}